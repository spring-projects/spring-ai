<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2023-2024 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

	<groupId>org.springframework.ai</groupId>
    <artifactId>spring-ai-bom</artifactId>
	<version>1.0.0-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>Spring AI BOM</name>
    <description>Bill of Materials POM (BOM) for the Spring AI modules</description>

    <url>https://github.com/spring-projects/spring-ai</url>

    <scm>
        <url>https://github.com/spring-projects/spring-ai</url>
        <connection>git://github.com/spring-projects/spring-ai.git</connection>
        <developerConnection>git@github.com:spring-projects/spring-ai.git</developerConnection>
    </scm>

	<organization>
		<name>Broadcom Inc.</name>
		<url>https://spring.io</url>
	</organization>

	<issueManagement>
		<system>Github Issues</system>
		<url>https://github.com/spring-projects/spring-ai/issues</url>
	</issueManagement>
	<ciManagement>
		<system>Github Actions</system>
		<url>https://github.com/spring-projects/spring-ai/actions</url>
	</ciManagement>
	<distributionManagement>
		<snapshotRepository>
			<id>spring-snapshots</id>
			<url>https://repo.spring.io/libs-snapshot-local</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</snapshotRepository>
		<repository>
			<id>repo.spring.io</id>
			<name>Spring Release Repository</name>
			<url>https://repo.spring.io/libs-release-local</url>
		</repository>
	</distributionManagement>
	<licenses>
		<license>
			<name>Apache 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<flatten-maven-plugin.version>1.5.0</flatten-maven-plugin.version>
		<spring-javaformat-maven-plugin.version>0.0.43</spring-javaformat-maven-plugin.version>
		<maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
		<maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
		<maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>3.5.2</maven-failsafe-plugin.version>
		<maven-javadoc-plugin.version>3.5.0</maven-javadoc-plugin.version>
		<maven-site-plugin.version>4.0.0-M13</maven-site-plugin.version>
		<maven-source-plugin.version>3.3.0</maven-source-plugin.version>
		<maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
		<maven-checkstyle-plugin.version>3.5.0</maven-checkstyle-plugin.version>
		<maven-checkstyle-plugin.failsOnError>true</maven-checkstyle-plugin.failsOnError>
		<maven-checkstyle-plugin.failOnViolation>true</maven-checkstyle-plugin.failOnViolation>
		<puppycrawl-tools-checkstyle.version>9.3</puppycrawl-tools-checkstyle.version>
		<disable.checks>true</disable.checks>
	</properties>

    <dependencyManagement>
        <dependencies>

			<!-- Spring AI commons -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-commons</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-template-st</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI model -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-model</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI vector store -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-vector-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI RAG -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-rag</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Vector Store based Advisors -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-advisors-vector-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI retry -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-retry</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI client chat -->

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-client-chat</artifactId>
                <version>${project.version}</version>
            </dependency>

			<!-- Spring AI MCP -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-mcp</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Document Readers -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-jsoup-document-reader</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-markdown-document-reader</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-pdf-document-reader</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-tika-document-reader</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Spring Cloud Bindings -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-spring-cloud-bindings</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Chat memory implementations -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-model-chat-memory</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-model-chat-memory-cassandra</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-model-chat-memory-jdbc</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-model-chat-memory-neo4j</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Models -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-anthropic</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-azure-openai</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-bedrock</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-bedrock-converse</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-huggingface</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-minimax</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-mistral-ai</artifactId>
				<version>${project.version}</version>
			</dependency>


            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-oci-genai</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-ollama</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-openai</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-postgresml</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-stability-ai</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-transformers</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-vertex-ai-embedding</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-vertex-ai-gemini</artifactId>
                <version>${project.version}</version>
            </dependency>


			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-zhipuai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-deepseek</artifactId>
				<version>${project.version}</version>
			</dependency>

            <!-- Spring AI Vector Stores -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-azure-cosmos-db-store</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-azure-store</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-cassandra-store</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-chroma-store</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-coherence-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-elasticsearch-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-gemfire-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-hanadb-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-mariadb-store</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-milvus-store</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-mongodb-atlas-store</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-neo4j-store</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-opensearch-store</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-oracle-store</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-pgvector-store</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-pinecone-store</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-qdrant-store</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-redis-store</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-typesense-store</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-weaviate-store</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-couchbase-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Spring Boot Auto-configurations -->

			<!-- Spring AI Retry autoconfiguration-->
			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-retry</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Chat client autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-chat-client</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Chat memory autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-chat-memory-cassandra</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-chat-memory-jdbc</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-chat-memory-neo4j</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Chat model observation autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-chat-observation</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Embedding model observation autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-embedding-observation</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Image model observation autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-image-observation</artifactId>
				<version>${project.version}</version>
			</dependency>


			<!-- Spring AI MCP client autoconfiguration -->

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-autoconfigure-mcp-client</artifactId>
                <version>${project.version}</version>
            </dependency>

			<!-- Spring AI MCP server autoconfiguration -->

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-autoconfigure-mcp-server</artifactId>
                <version>${project.version}</version>
            </dependency>

			<!-- Spring AI model tool autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-tool</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Model autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-anthropic</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-azure-openai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-bedrock-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-huggingface</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-minimax</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-mistral-ai</artifactId>
				<version>${project.version}</version>
			</dependency>


			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-oci-genai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-ollama</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-openai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-postgresml-embedding</artifactId>
				<version>${project.version}</version>
			</dependency>


			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-stability-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-transformers</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-vertex-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-zhipuai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-deepseek</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI vector store autoconfiguration -->
			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-azure</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-azure-cosmos-db</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-cassandra</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-chroma</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-couchbase</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-elasticsearch</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-gemfire</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-hanadb</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-mariadb</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-milvus</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-mongodb-atlas</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-neo4j</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-observation</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-opensearch</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-oracle</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-pgvector</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-pinecone</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-qdrant</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-redis</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-typesense</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-weaviate</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Spring Boot starters for the vector stores -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-aws-opensearch</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-azure</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-azure-cosmos-db</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-cassandra</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-chroma</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-elasticsearch</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-gemfire</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-hanadb</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-mariadb</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-milvus</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-mongodb-atlas</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-neo4j</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-opensearch</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-oracle</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-pgvector</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-pinecone</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-qdrant</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-redis</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-typesense</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-weaviate</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Spring Boot starters for the Models -->

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-starter-model-anthropic</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-starter-model-azure-openai</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-starter-model-bedrock</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-bedrock-converse</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-huggingface</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-minimax</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-mistral-ai</artifactId>
				<version>${project.version}</version>
			</dependency>


			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-oci-genai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-ollama</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-openai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-postgresml-embedding</artifactId>
				<version>${project.version}</version>
			</dependency>


			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-stability-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-transformers</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-vertex-ai-embedding</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-vertex-ai-gemini</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-zhipuai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-deepseek</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Starters for MCP -->

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-starter-mcp-client</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-mcp-client-webflux</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-mcp-server</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-mcp-server-webflux</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-mcp-server-webmvc</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Spring Boot starters for Chat Memory -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-chat-memory-cassandra</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-chat-memory-jdbc</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-chat-memory-neo4j</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Utilities -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-test</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-spring-boot-docker-compose</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-spring-boot-testcontainers</artifactId>
				<version>${project.version}</version>
			</dependency>

        </dependencies>

    </dependencyManagement>

	<repositories>
		<repository>
			<name>Central Portal Snapshots</name>
			<id>central-portal-snapshots</id>
			<url>https://central.sonatype.com/repository/maven-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>maven-central</id>
			<url>https://repo.maven.apache.org/maven2/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<developers>
		<developer>
			<id>mpollack</id>
			<name>Mark Pollack</name>
			<email>mpollack at vmware.com</email>
			<organization>VMware</organization>
			<organizationUrl>http://www.spring.io</organizationUrl>
			<roles>
				<role>lead</role>
			</roles>
		</developer>
		<developer>
			<id>tzolov</id>
			<name>Christian Tzolov</name>
			<email>christian tzolov at broadcom.com</email>
			<organization>Broadcom</organization>
			<organizationUrl>http://www.spring.io</organizationUrl>
			<roles>
				<role>lead</role>
			</roles>
		</developer>
	</developers>

	<build>
		<plugins>
			<plugin>
				<groupId>io.spring.javaformat</groupId>
				<artifactId>spring-javaformat-maven-plugin</artifactId>
				<version>${spring-javaformat-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<inherited>true</inherited>
						<goals>
							<goal>validate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${puppycrawl-tools-checkstyle.version}</version>
					</dependency>
					<dependency>
						<groupId>io.spring.javaformat</groupId>
						<artifactId>spring-javaformat-checkstyle</artifactId>
						<version>0.0.43</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>checkstyle-validation</id>
						<phase>validate</phase>
						<inherited>true</inherited>
						<configuration>
							<skip>${disable.checks}</skip>
							<configLocation>src/checkstyle/checkstyle.xml</configLocation>
							<headerLocation>src/checkstyle/checkstyle-header.txt</headerLocation>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<propertyExpansion>
								checkstyle.build.directory=${project.build.directory}
								checkstyle.suppressions.file=${project.basedir}/src/checkstyle/checkstyle-suppressions.xml
								checkstyle.additional.suppressions.file=${project.basedir}/src/checkstyle/checkstyle-suppressions.xml
								checkstyle.header.file=${project.basedir}/src/checkstyle/checkstyle-header.txt
							</propertyExpansion>
							<consoleOutput>true</consoleOutput>
							<failsOnError>${maven-checkstyle-plugin.failsOnError}
							</failsOnError>
							<failOnViolation>
								${maven-checkstyle-plugin.failOnViolation}
							</failOnViolation>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven-site-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<release>${java.version}</release>
					<compilerArgs>
						<compilerArg>-parameters</compilerArg>
					</compilerArgs>
				</configuration>
				<executions>
					<!-- Replacing default-compile as it is treated specially by Maven -->
					<execution>
						<id>default-compile</id>
						<phase>none</phase>
					</execution>
					<!-- Replacing default-testCompile as it is treated specially by Maven -->
					<execution>
						<id>default-testCompile</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>java-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>java-test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<argLine>${surefireArgLine}</argLine>

					<useFile>false</useFile>
					<trimStackTrace>false</trimStackTrace>

					<!-- Show test timing information -->
					<reportFormat>plain</reportFormat>

					<!-- Output test execution times in the logs -->
					<redirectTestOutputToFile>false</redirectTestOutputToFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Implementation-Title>${project.artifactId}</Implementation-Title>
							<Implementation-Version>${project.version}</Implementation-Version>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>generate-sources</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>${flatten-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
						<configuration>
							<updatePomFile>true</updatePomFile>
							<flattenMode>ossrh</flattenMode>
							<pomElements>
								<distributionManagement>remove</distributionManagement>
								<dependencyManagement>keep</dependencyManagement>
								<repositories>remove</repositories>
								<scm>keep</scm>
								<url>keep</url>
								<organization>resolve</organization>
							</pomElements>
						</configuration>
					</execution>
					<execution>
						<id>clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<configuration>
					<overview>
						${project.basedir}/spring-ai-docs/src/main/javadoc/overview.html</overview>
					<detectJavaApiLink>false</detectJavaApiLink>
					<failOnError>false</failOnError>
					<doclint>none</doclint>
				</configuration>
				<executions>
					<execution>
						<id>generate-javadocs</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>artifactory-staging</id>
			<distributionManagement>
				<repository>
					<id>spring-staging</id>
					<url>https://repo.spring.io/libs-staging-local</url>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</distributionManagement>
		</profile>
		<profile>
			<id>artifactory-milestone</id>
			<distributionManagement>
				<repository>
					<id>spring-milestones</id>
					<url>https://repo.spring.io/libs-milestone-local</url>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</distributionManagement>
		</profile>
		<profile>
			<id>sonatype</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!-- Passphrase consumed from MAVEN_GPG_PASSPHRASE environment variable. -->
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.7.0</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>sonatype-new</serverId>
							<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
							<keepStagingRepositoryOnFailure>true</keepStagingRepositoryOnFailure>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
