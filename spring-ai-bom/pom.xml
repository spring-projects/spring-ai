<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2023-2024 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.ai</groupId>
        <artifactId>spring-ai-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>spring-ai-bom</artifactId>
    <packaging>pom</packaging>

    <name>Spring AI BOM</name>
    <description>Bill of Materials POM (BOM) for the Spring AI modules</description>

    <url>https://github.com/spring-projects/spring-ai</url>

    <scm>
        <url>https://github.com/spring-projects/spring-ai</url>
        <connection>git://github.com/spring-projects/spring-ai.git</connection>
        <developerConnection>git@github.com:spring-projects/spring-ai.git</developerConnection>
    </scm>

    <dependencyManagement>
        <dependencies>

			<!-- Spring AI commons -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-commons</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI model -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-model</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI vector store -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-vector-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI RAG -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-rag</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Vector Store based Advisors -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-advisors-vector-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI retry -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-retry</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI client chat -->

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-client-chat</artifactId>
                <version>${project.version}</version>
            </dependency>

			<!-- Spring AI MCP -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-mcp</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Document Readers -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-jsoup-document-reader</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-markdown-document-reader</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-pdf-document-reader</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-tika-document-reader</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Spring Cloud Bindings -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-spring-cloud-bindings</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Chat memory implementations -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-model-chat-memory-cassandra</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-model-chat-memory-jdbc</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-model-chat-memory-neo4j</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Models -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-anthropic</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-azure-openai</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-bedrock</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-bedrock-converse</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-huggingface</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-minimax</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-mistral-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-moonshot</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-oci-genai</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-ollama</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-openai</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-postgresml</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-qianfan</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-stability-ai</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-transformers</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-vertex-ai-embedding</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-vertex-ai-gemini</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-watsonx-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-zhipuai</artifactId>
				<version>${project.version}</version>
			</dependency>

            <!-- Spring AI Vector Stores -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-azure-cosmos-db-store</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-azure-store</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-cassandra-store</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-chroma-store</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-coherence-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-elasticsearch-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-gemfire-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-hanadb-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-mariadb-store</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-milvus-store</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-mongodb-atlas-store</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-neo4j-store</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-opensearch-store</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-oracle-store</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-pgvector-store</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-pinecone-store</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-qdrant-store</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-redis-store</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-typesense-store</artifactId>
				<version>${project.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-weaviate-store</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-couchbase-store</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Spring Boot Auto-configurations -->

			<!-- Spring AI Retry autoconfiguration-->
			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-retry</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Chat client autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-chat-client</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Chat memory autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-chat-memory-cassandra</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-chat-memory-jdbc</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-chat-memory-neo4j</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Chat model observation autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-chat-observation</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Embedding model observation autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-embedding-observation</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Image model observation autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-image-observation</artifactId>
				<version>${project.version}</version>
			</dependency>


			<!-- Spring AI MCP client autoconfiguration -->

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-autoconfigure-mcp-client</artifactId>
                <version>${project.version}</version>
            </dependency>

			<!-- Spring AI MCP server autoconfiguration -->

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-autoconfigure-mcp-server</artifactId>
                <version>${project.version}</version>
            </dependency>

			<!-- Spring AI model tool autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-tool</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Model autoconfiguration -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-anthropic</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-azure-openai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-bedrock-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-huggingface</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-minimax</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-mistral-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-moonshot</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-oci-genai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-ollama</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-openai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-postgresml-embedding</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-qianfan</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-stability-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-transformers</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-vertex-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-watsonx-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-model-zhipuai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI vector store autoconfiguration -->
			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-azure</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-azure-cosmos-db</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-cassandra</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-chroma</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-couchbase</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-elasticsearch</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-gemfire</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-hanadb</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-mariadb</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-milvus</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-mongodb-atlas</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-neo4j</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-observation</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-opensearch</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-oracle</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-pgvector</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-pinecone</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-qdrant</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-redis</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-typesense</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-autoconfigure-vector-store-weaviate</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Spring Boot starters for the vector stores -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-aws-opensearch</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-azure</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-azure-cosmos-db</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-cassandra</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-chroma</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-elasticsearch</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-gemfire</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-hanadb</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-mariadb</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-milvus</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-mongodb-atlas</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-neo4j</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-opensearch</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-oracle</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-pgvector</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-pinecone</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-qdrant</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-redis</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-typesense</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-vector-store-weaviate</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Spring Boot starters for the Models -->

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-starter-model-anthropic</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-starter-model-azure-openai</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-starter-model-bedrock</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-bedrock-converse</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-huggingface</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-minimax</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-mistral-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-moonshot</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-oci-genai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-ollama</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-openai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-postgresml-embedding</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-qianfan</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-stability-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-transformers</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-vertex-ai-embedding</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-vertex-ai-gemini</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-watsonx-ai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-zhipuai</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Starters for MCP -->

            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-starter-mcp-client</artifactId>
                <version>${project.version}</version>
            </dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-mcp-client-webflux</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-mcp-server</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-mcp-server-webflux</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-mcp-server-webmvc</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Spring AI Spring Boot starters for Chat Memory -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-chat-memory-cassandra</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-chat-memory-jdbc</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-starter-model-chat-memory-neo4j</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Utilities -->

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-test</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-spring-boot-docker-compose</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-spring-boot-testcontainers</artifactId>
				<version>${project.version}</version>
			</dependency>

        </dependencies>

    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <configuration>
                            <updatePomFile>true</updatePomFile>
                            <flattenMode>ossrh</flattenMode>
                            <pomElements>
                                <distributionManagement>remove</distributionManagement>
                                <dependencyManagement>keep</dependencyManagement>
                                <repositories>remove</repositories>
                                <scm>keep</scm>
                                <url>keep</url>
                                <organization>resolve</organization>
                            </pomElements>
                        </configuration>
                    </execution>
                    <execution>
                        <id>clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
