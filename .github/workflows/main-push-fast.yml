name: Main Push - Fast

on:
  push:
    branches: ['main']
    paths-ignore:
      - 'spring-ai-docs/**'
      - '*.md'
      - 'docs/**'
      - '.github/workflows/**'
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Specific commit SHA to test (optional - defaults to latest)'
        required: false
        type: string

jobs:
  fast-impacted:
    name: Fast Build - Affected Modules
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'spring-projects' }}
    permissions:
      contents: read
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 2  # Need HEAD and HEAD~1 for single commit diff
          ref: ${{ github.event.inputs.commit_sha || github.sha }}

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          # cache: 'maven'  # Disabled for fast workflow - reduces post-job noise

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Configure Testcontainers
        run: |
          echo "testcontainers.reuse.enable=true" > $HOME/.testcontainers.properties

      - name: Show commit range
        run: |
          if [ -n "${{ github.event.inputs.commit_sha }}" ]; then
            echo "Testing specific commit: ${{ github.event.inputs.commit_sha }}"
            echo "Commit info:"
            git log --oneline -1 HEAD
            echo "Base ref: HEAD~1"
            git log --oneline "HEAD~1...HEAD"
          else
            echo "Testing latest commit on main branch"
            echo "Base ref: HEAD~1" 
            git log --oneline "HEAD~1...HEAD"
          fi

      - name: Compute impacted modules
        id: mods
        run: |
          echo "=== Detecting affected modules ==="
          MODULE_LIST=$(python3 .github/scripts/test_discovery.py modules-from-diff 2>/dev/null)
          echo "modules=$MODULE_LIST" >> "$GITHUB_OUTPUT"
          
          if [ -n "$MODULE_LIST" ]; then
            echo "Affected modules detected: $MODULE_LIST"
            echo "needs_ollama=true" >> "$GITHUB_OUTPUT"
          else
            echo "No affected modules detected - only workflow/docs changes"  
            echo "needs_ollama=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Start Ollama service for integration tests
        if: steps.mods.outputs.needs_ollama == 'true'
        run: |
          echo "Starting Ollama for integration tests..."
          docker run -d --name ollama-test -p 11434:11434 ollama/ollama:latest
          echo "Ollama container started"

      - name: Test affected modules with integration tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SPRING_AI_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          OLLAMA_AUTOCONF_TESTS_ENABLED: "true"
          OLLAMA_WITH_REUSE: true
        run: |
          MODS="${{ steps.mods.outputs.modules }}"
          if [ -z "$MODS" ]; then 
            echo "INFO: No affected modules detected - skipping build"
            echo "Only workflow, documentation, or non-build files were changed"
            echo "Fast workflow optimization: no compilation needed"
            exit 0
          else
            echo "INFO: Running tests for affected modules: $MODS"
            ./mvnw -B -q -T 1C -Pci-fast-integration-tests -DfailIfNoTests=false -pl "$MODS" -amd verify
          fi

      - name: Deploy to Artifactory (affected modules only)
        if: steps.mods.outputs.modules != ''
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          MODS="${{ steps.mods.outputs.modules }}"
          echo "INFO: Deploying affected modules to Artifactory: $MODS"
          ./mvnw -B -q -s settings.xml -DfailIfNoTests=false -pl "$MODS" -amd deploy